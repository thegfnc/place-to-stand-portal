-- Client membership linking client records to portal users

create table public.client_members (
	id bigint generated by default as identity primary key,
	client_id uuid not null references public.clients (id) on delete cascade,
	user_id uuid not null references public.users (id) on delete cascade,
	created_at timestamptz not null default timezone('utc', now()),
	deleted_at timestamptz,
	unique (client_id, user_id)
);

create index idx_client_members_client on public.client_members (client_id)
	where deleted_at is null;

create index idx_client_members_user on public.client_members (user_id)
	where deleted_at is null;

alter table public.client_members enable row level security;

create policy "Admins manage client members" on public.client_members
	using (public.is_admin())
	with check (public.is_admin());

create policy "Members view their client assignments" on public.client_members
	for select using (
		user_id = auth.uid()
		and deleted_at is null
	);

-- Refresh client visibility policy to account for direct membership

drop policy if exists "Members read clients" on public.clients;

create policy "Members read clients" on public.clients
	for select using (
		deleted_at is null
		and (
			exists (
				select 1
				from public.projects p
				join public.project_members pm on pm.project_id = p.id and pm.deleted_at is null
				where p.client_id = clients.id
					and p.deleted_at is null
					and pm.user_id = auth.uid()
			)
			or exists (
				select 1
				from public.client_members cm
				where cm.client_id = clients.id
					and cm.user_id = auth.uid()
					and cm.deleted_at is null
			)
		)
	);

-- Allow client members to view related projects and hour blocks through their client access

drop policy if exists "Members read projects" on public.projects;

create policy "Members read projects" on public.projects
	for select using (
		deleted_at is null
		and (
			exists (
				select 1
				from public.project_members pm
				where pm.project_id = projects.id
					and pm.user_id = auth.uid()
					and pm.deleted_at is null
			)
			or exists (
				select 1
				from public.client_members cm
				where cm.client_id = projects.client_id
					and cm.user_id = auth.uid()
					and cm.deleted_at is null
			)
		)
	);

drop policy if exists "Members view hour blocks" on public.hour_blocks;

create policy "Members view hour blocks" on public.hour_blocks
	for select using (
		deleted_at is null
		and (
			exists (
				select 1
				from public.project_members pm
				join public.projects p on p.id = pm.project_id and p.deleted_at is null
				where p.client_id = hour_blocks.client_id
					and pm.user_id = auth.uid()
					and pm.deleted_at is null
			)
			or exists (
				select 1
				from public.client_members cm
				where cm.client_id = hour_blocks.client_id
					and cm.user_id = auth.uid()
					and cm.deleted_at is null
			)
		)
	);
